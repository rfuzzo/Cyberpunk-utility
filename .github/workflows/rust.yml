name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  # automated checks
  check:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: true
      matrix:
        os: [windows-latest]
        build_type: [Release]
        target: [tweak-doxygen, red4-tweak-browser]

    steps:
    - uses: actions/checkout@v3

    - name: Check
      run: |
        cd ${{ matrix.target }}
        cargo check --all-features
    - name: Format
      run: |
        cd ${{ matrix.target }}
        cargo fmt --all -- --check
    - name: Clippy
      run: |
        cd ${{ matrix.target }}
        cargo clippy -- -D warnings
    - name: Build
      run: |
        cd ${{ matrix.target }}
        cargo build
    - name: Run tests
      run: |
        cd ${{ matrix.target }}
        cargo test
    
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3
      with:
        path: ${{ matrix.target }}/target/release/${{ matrix.target }}.exe
  
  # specific build conditions
  red4-conflicts:
    runs-on: windows-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: unzip resources
        run: |
          cd red4-conflicts\src
          Expand-Archive -Path .\metadata-resources.zip -DestinationPath .\
      
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
        
      - name: Build
        run: |
          cd red4-conflicts
          cargo build --release

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3
        with:
          path: red4-conflicts/target/release/red4-conflicts.exe
